{"version":3,"file":"Index-BJroW_S-.js","sources":["../../../sidebar/shared/Sidebar.svelte","../../../sidebar/Index.svelte"],"sourcesContent":["<script lang=\"ts\">\n\timport { createEventDispatcher, onMount } from \"svelte\";\n\tconst dispatch = createEventDispatcher<{\n\t\texpand: void;\n\t\tcollapse: void;\n\t}>();\n\n\texport let open = true;\n\texport let width: number | string;\n\n\t// Using a temporary variable to animate the sidebar opening at the start\n\tlet _open = false;\n\tlet sidebar_div: HTMLElement;\n\tlet overlap_amount = 0;\n\n\tlet width_css = typeof width === \"number\" ? `${width}px` : width;\n\n\t// Check if the sidebar overlaps with the main content\n\tfunction check_overlap(): void {\n\t\tif (!sidebar_div?.parentElement) return;\n\t\tconst parent_rect = sidebar_div.parentElement.getBoundingClientRect();\n\t\tconst sidebar_rect = sidebar_div.getBoundingClientRect();\n\t\tconst available_space = parent_rect.left;\n\t\toverlap_amount = Math.max(0, sidebar_rect.width - available_space + 30);\n\t}\n\n\tonMount(() => {\n\t\tsidebar_div.parentElement?.classList.add(\"sidebar-parent\");\n\t\tcheck_overlap();\n\t\twindow.addEventListener(\"resize\", check_overlap);\n\n\t\tconst update_parent_overlap = (): void => {\n\t\t\tif (sidebar_div?.parentElement) {\n\t\t\t\tsidebar_div.parentElement.style.setProperty(\n\t\t\t\t\t\"--overlap-amount\",\n\t\t\t\t\t`${overlap_amount}px`\n\t\t\t\t);\n\t\t\t}\n\t\t};\n\t\tupdate_parent_overlap();\n\t\t_open = open;\n\t\treturn () => window.removeEventListener(\"resize\", check_overlap);\n\t});\n</script>\n\n<div\n\tclass=\"sidebar\"\n\tclass:open={_open}\n\tbind:this={sidebar_div}\n\tstyle=\"width: {width_css}; left: calc({width_css} * -1)\"\n>\n\t<button\n\t\ton:click={() => {\n\t\t\t_open = !_open;\n\t\t\tif (_open) {\n\t\t\t\tdispatch(\"expand\");\n\t\t\t} else {\n\t\t\t\tdispatch(\"collapse\");\n\t\t\t}\n\t\t}}\n\t\tclass=\"toggle-button\"\n\t\taria-label=\"Toggle Sidebar\"\n\t>\n\t\t<div class=\"chevron\">\n\t\t\t<span class=\"chevron-left\"></span>\n\t\t</div>\n\t</button>\n\t<div class=\"sidebar-content\">\n\t\t<slot />\n\t</div>\n</div>\n\n<style>\n\t:global(.sidebar-parent) {\n\t\tdisplay: flex !important;\n\t\tpadding-left: 0;\n\t\ttransition: padding-left 0.3s ease-in-out;\n\t}\n\n\t:global(.sidebar-parent:has(.sidebar.open)) {\n\t\tpadding-left: var(--overlap-amount);\n\t}\n\n\t.sidebar {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tposition: fixed;\n\t\ttop: 0;\n\t\theight: 100%;\n\t\tbackground-color: var(--background-fill-secondary);\n\t\tbox-shadow: var(--size-1) 0 var(--size-2) rgba(100, 89, 89, 0.1);\n\t\ttransform: translateX(0%);\n\t\ttransition: transform 0.3s ease-in-out;\n\t\tz-index: 1000;\n\t}\n\n\t.sidebar.open {\n\t\ttransform: translateX(100%);\n\t}\n\n\t.toggle-button {\n\t\tposition: absolute;\n\t\ttop: var(--size-4);\n\t\tright: calc(var(--size-8) * -1);\n\t\tbackground: none;\n\t\tborder: none;\n\t\tcursor: pointer;\n\t\tpadding: var(--size-2);\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\ttransition: right 0.3s ease-in-out;\n\t\twidth: var(--size-8);\n\t\theight: var(--size-8);\n\t\tz-index: 1001;\n\t}\n\n\t.open .toggle-button {\n\t\tright: var(--size-2-5);\n\t\ttransform: rotate(180deg);\n\t}\n\n\t.chevron {\n\t\twidth: 100%;\n\t\theight: 100%;\n\t\tposition: relative;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t}\n\n\t.chevron-left {\n\t\tposition: relative;\n\t\twidth: var(--size-3);\n\t\theight: var(--size-3);\n\t\tborder-top: var(--size-0-5) solid var(--button-secondary-text-color);\n\t\tborder-right: var(--size-0-5) solid var(--button-secondary-text-color);\n\t\ttransform: rotate(45deg);\n\t}\n\n\t.sidebar-content {\n\t\tpadding: var(--size-5);\n\t\toverflow-y: auto;\n\t}\n</style>\n","<script lang=\"ts\">\n\timport Sidebar from \"./shared/Sidebar.svelte\";\n\timport { StatusTracker } from \"@gradio/statustracker\";\n\timport type { LoadingStatus } from \"@gradio/statustracker\";\n\n\timport type { Gradio } from \"@gradio/utils\";\n\texport let open = true;\n\texport let loading_status: LoadingStatus;\n\texport let gradio: Gradio<{\n\t\texpand: never;\n\t\tcollapse: never;\n\t}>;\n\texport let width: number | string;\n</script>\n\n<StatusTracker\n\tautoscroll={gradio.autoscroll}\n\ti18n={gradio.i18n}\n\t{...loading_status}\n/>\n\n<Sidebar\n\tbind:open\n\t{width}\n\ton:expand={() => gradio.dispatch(\"expand\")}\n\ton:collapse={() => gradio.dispatch(\"collapse\")}\n>\n\t<slot />\n</Sidebar>\n"],"names":["ctx","insert","target","div2","anchor","append","button","div1","dispatch","createEventDispatcher","open","$$props","width","_open","sidebar_div","overlap_amount","width_css","check_overlap","parent_rect","sidebar_rect","available_space","onMount","$$invalidate","$$value","dirty","loading_status","gradio"],"mappings":"qpBAiDgBA,EAAS,CAAA,CAAA,qBAAeA,EAAS,CAAA,EAAA,QAAA,aAFpCA,EAAK,CAAA,CAAA,UAFlBC,EAyBKC,EAAAC,EAAAC,CAAA,EAnBJC,EAeQF,EAAAG,CAAA,SACRD,EAEKF,EAAAI,CAAA,8JAtBOP,EAAK,CAAA,CAAA,+IA7CXQ,EAAWC,QAKN,KAAAC,EAAO,EAAA,EAAAC,EACP,CAAA,MAAAC,CAAA,EAAAD,EAGPE,EAAQ,GACRC,EACAC,EAAiB,EAEjBC,EAAmB,OAAAJ,GAAU,SAAc,GAAAA,CAAK,KAAOA,EAGlD,SAAAK,GAAA,KACHH,GAAa,cAAA,OACZ,MAAAI,EAAcJ,EAAY,cAAc,sBAAA,EACxCK,EAAeL,EAAY,wBAC3BM,EAAkBF,EAAY,KACpCH,EAAiB,KAAK,IAAI,EAAGI,EAAa,MAAQC,EAAkB,EAAE,EAGvEC,EAAA,KACCP,EAAY,eAAe,UAAU,IAAI,gBAAgB,EACzDG,IACA,OAAO,iBAAiB,SAAUA,CAAa,GAEzC,IAAA,CACDH,GAAa,eAChBA,EAAY,cAAc,MAAM,YAC/B,mBAAA,GACGC,CAAc,IAAA,UAKpBF,EAAQH,CAAA,MACK,OAAO,oBAAoB,SAAUO,CAAa,iBAY9DK,EAAA,EAAAT,GAASA,CAAK,EAEbL,EADGK,EACM,SAEA,UAFQ,4CAPTC,EAAWS,ynBChCV,CAAA,WAAAvB,KAAO,UAAU,EACvB,CAAA,KAAAA,KAAO,IAAI,EACbA,EAAc,CAAA,mYAFNwB,EAAA,GAAA,CAAA,WAAAxB,KAAO,UAAU,EACvBwB,EAAA,GAAA,CAAA,KAAAxB,KAAO,IAAI,SACbA,EAAc,CAAA,CAAA,4TAZP,KAAAU,EAAO,EAAA,EAAAC,EACP,CAAA,eAAAc,CAAA,EAAAd,EACA,CAAA,OAAAe,CAAA,EAAAf,EAIA,CAAA,MAAAC,CAAA,EAAAD,uCAYMe,EAAO,SAAS,QAAQ,QACtBA,EAAO,SAAS,UAAU"}