{"version":3,"file":"Index-DzMKDR-h.js","sources":["../../../../js/dataframe/shared/EditableCell.svelte","../../../../js/dataframe/shared/VirtualTable.svelte","../../../../js/dataframe/shared/CellMenuIcons.svelte","../../../../js/dataframe/shared/CellMenu.svelte","../../../../js/dataframe/shared/Toolbar.svelte","../../../../js/dataframe/shared/table_utils.ts","../../../../js/dataframe/shared/Table.svelte","../../../../js/dataframe/Index.svelte"],"sourcesContent":["<script lang=\"ts\">\n\timport { createEventDispatcher } from \"svelte\";\n\timport { MarkdownCode } from \"@gradio/markdown-code\";\n\n\texport let edit: boolean;\n\texport let value: string | number = \"\";\n\texport let display_value: string | null = null;\n\texport let styling = \"\";\n\texport let header = false;\n\texport let datatype:\n\t\t| \"str\"\n\t\t| \"markdown\"\n\t\t| \"html\"\n\t\t| \"number\"\n\t\t| \"bool\"\n\t\t| \"date\" = \"str\";\n\texport let latex_delimiters: {\n\t\tleft: string;\n\t\tright: string;\n\t\tdisplay: boolean;\n\t}[];\n\texport let clear_on_focus = false;\n\texport let line_breaks = true;\n\texport let editable = true;\n\texport let root: string;\n\n\tconst dispatch = createEventDispatcher();\n\n\texport let el: HTMLInputElement | null;\n\t$: _value = value;\n\n\tfunction use_focus(node: HTMLInputElement): any {\n\t\tif (clear_on_focus) {\n\t\t\t_value = \"\";\n\t\t}\n\n\t\trequestAnimationFrame(() => {\n\t\t\tnode.focus();\n\t\t});\n\n\t\treturn {};\n\t}\n\n\tfunction handle_blur({\n\t\tcurrentTarget\n\t}: Event & {\n\t\tcurrentTarget: HTMLInputElement;\n\t}): void {\n\t\tvalue = currentTarget.value;\n\t\tdispatch(\"blur\");\n\t}\n\n\tfunction handle_keydown(event: KeyboardEvent): void {\n\t\tif (event.key === \"Enter\") {\n\t\t\tvalue = _value;\n\t\t\tdispatch(\"blur\");\n\t\t}\n\t\tdispatch(\"keydown\", event);\n\t}\n</script>\n\n{#if edit}\n\t<input\n\t\trole=\"textbox\"\n\t\tbind:this={el}\n\t\tbind:value={_value}\n\t\tclass:header\n\t\ttabindex=\"-1\"\n\t\ton:blur={handle_blur}\n\t\ton:mousedown|stopPropagation\n\t\ton:mouseup|stopPropagation\n\t\ton:click|stopPropagation\n\t\tuse:use_focus\n\t\ton:keydown={handle_keydown}\n\t/>\n{/if}\n\n<span\n\ton:dblclick\n\ttabindex=\"-1\"\n\trole=\"button\"\n\tclass:edit\n\ton:focus|preventDefault\n\tstyle={styling}\n\tclass=\"table-cell-text\"\n\tplaceholder=\" \"\n>\n\t{#if datatype === \"html\"}\n\t\t{@html value}\n\t{:else if datatype === \"markdown\"}\n\t\t<MarkdownCode\n\t\t\tmessage={value.toLocaleString()}\n\t\t\t{latex_delimiters}\n\t\t\t{line_breaks}\n\t\t\tchatbot={false}\n\t\t\t{root}\n\t\t/>\n\t{:else}\n\t\t{editable ? value : display_value || value}\n\t{/if}\n</span>\n\n<style>\n\tinput {\n\t\tposition: absolute;\n\t\ttop: var(--size-2);\n\t\tright: var(--size-2);\n\t\tbottom: var(--size-2);\n\t\tleft: var(--size-2);\n\t\tflex: 1 1 0%;\n\t\ttransform: translateX(-0.1px);\n\t\toutline: none;\n\t\tborder: none;\n\t\tbackground: transparent;\n\t\tcursor: text;\n\t}\n\n\tspan {\n\t\tflex: 1 1 0%;\n\t\toutline: none;\n\t\tpadding: var(--size-2);\n\t\t-webkit-user-select: text;\n\t\t-moz-user-select: text;\n\t\t-ms-user-select: text;\n\t\tuser-select: text;\n\t\tcursor: text;\n\t}\n\n\t.header {\n\t\ttransform: translateX(0);\n\t\tfont-weight: var(--weight-bold);\n\t}\n\n\t.edit {\n\t\topacity: 0;\n\t\tpointer-events: none;\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { onMount, tick } from \"svelte\";\n\timport { _ } from \"svelte-i18n\";\n\n\texport let items: any[][] = [];\n\n\texport let max_height: number;\n\texport let actual_height: number;\n\texport let table_scrollbar_width: number;\n\texport let start = 0;\n\texport let end = 20;\n\texport let selected: number | false;\n\tlet height = \"100%\";\n\n\tlet average_height = 30;\n\tlet bottom = 0;\n\tlet contents: HTMLTableSectionElement;\n\tlet head_height = 0;\n\tlet foot_height = 0;\n\tlet height_map: number[] = [];\n\tlet mounted: boolean;\n\tlet rows: HTMLCollectionOf<HTMLTableRowElement>;\n\tlet top = 0;\n\tlet viewport: HTMLTableElement;\n\tlet viewport_height = 200;\n\tlet visible: { index: number; data: any[] }[] = [];\n\tlet viewport_box: DOMRectReadOnly;\n\n\t$: viewport_height = viewport_box?.height || 200;\n\n\tconst is_browser = typeof window !== \"undefined\";\n\tconst raf = is_browser\n\t\t? window.requestAnimationFrame\n\t\t: (cb: (...args: any[]) => void) => cb();\n\n\t$: mounted && raf(() => refresh_height_map(sortedItems));\n\n\tlet content_height = 0;\n\tasync function refresh_height_map(_items: typeof items): Promise<void> {\n\t\tif (viewport_height === 0) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst { scrollTop } = viewport;\n\t\ttable_scrollbar_width = viewport.offsetWidth - viewport.clientWidth;\n\n\t\tcontent_height = top - (scrollTop - head_height);\n\t\tlet i = start;\n\n\t\twhile (content_height < max_height && i < _items.length) {\n\t\t\tlet row = rows[i - start];\n\t\t\tif (!row) {\n\t\t\t\tend = i + 1;\n\t\t\t\tawait tick(); // render the newly visible row\n\t\t\t\trow = rows[i - start];\n\t\t\t}\n\t\t\tlet _h = row?.getBoundingClientRect().height;\n\t\t\tif (!_h) {\n\t\t\t\t_h = average_height;\n\t\t\t}\n\t\t\tconst row_height = (height_map[i] = _h);\n\t\t\tcontent_height += row_height;\n\t\t\ti += 1;\n\t\t}\n\n\t\tend = i;\n\t\tconst remaining = _items.length - end;\n\n\t\tconst scrollbar_height = viewport.offsetHeight - viewport.clientHeight;\n\t\tif (scrollbar_height > 0) {\n\t\t\tcontent_height += scrollbar_height;\n\t\t}\n\n\t\tlet filtered_height_map = height_map.filter((v) => typeof v === \"number\");\n\t\taverage_height =\n\t\t\tfiltered_height_map.reduce((a, b) => a + b, 0) /\n\t\t\tfiltered_height_map.length;\n\n\t\tbottom = remaining * average_height;\n\t\theight_map.length = _items.length;\n\t\tawait tick();\n\t\tif (!max_height) {\n\t\t\tactual_height = content_height + 1;\n\t\t} else if (content_height < max_height) {\n\t\t\tactual_height = content_height + 2;\n\t\t} else {\n\t\t\tactual_height = max_height;\n\t\t}\n\n\t\tawait tick();\n\t}\n\n\t$: scroll_and_render(selected);\n\n\tasync function scroll_and_render(n: number | false): Promise<void> {\n\t\traf(async () => {\n\t\t\tif (typeof n !== \"number\") return;\n\t\t\tconst direction = typeof n !== \"number\" ? false : is_in_view(n);\n\t\t\tif (direction === true) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (direction === \"back\") {\n\t\t\t\tawait scroll_to_index(n, { behavior: \"instant\" });\n\t\t\t}\n\n\t\t\tif (direction === \"forwards\") {\n\t\t\t\tawait scroll_to_index(n, { behavior: \"instant\" }, true);\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction is_in_view(n: number): \"back\" | \"forwards\" | true {\n\t\tconst current = rows && rows[n - start];\n\t\tif (!current && n < start) {\n\t\t\treturn \"back\";\n\t\t}\n\t\tif (!current && n >= end - 1) {\n\t\t\treturn \"forwards\";\n\t\t}\n\n\t\tconst { top: viewport_top } = viewport.getBoundingClientRect();\n\t\tconst { top, bottom } = current.getBoundingClientRect();\n\n\t\tif (top - viewport_top < 37) {\n\t\t\treturn \"back\";\n\t\t}\n\n\t\tif (bottom - viewport_top > viewport_height) {\n\t\t\treturn \"forwards\";\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tfunction get_computed_px_amount(elem: HTMLElement, property: string): number {\n\t\tif (!elem) {\n\t\t\treturn 0;\n\t\t}\n\t\tconst compStyle = getComputedStyle(elem);\n\n\t\tlet x = parseInt(compStyle.getPropertyValue(property));\n\t\treturn x;\n\t}\n\n\tasync function handle_scroll(e: Event): Promise<void> {\n\t\tconst scroll_top = viewport.scrollTop;\n\n\t\trows = contents.children as HTMLCollectionOf<HTMLTableRowElement>;\n\t\tconst is_start_overflow = sortedItems.length < start;\n\n\t\tconst row_top_border = get_computed_px_amount(rows[1], \"border-top-width\");\n\n\t\tconst actual_border_collapsed_width = 0;\n\n\t\tif (is_start_overflow) {\n\t\t\tawait scroll_to_index(sortedItems.length - 1, { behavior: \"auto\" });\n\t\t}\n\n\t\tlet new_start = 0;\n\t\t// acquire height map for currently visible rows\n\t\tfor (let v = 0; v < rows.length; v += 1) {\n\t\t\theight_map[start + v] = rows[v].getBoundingClientRect().height;\n\t\t}\n\t\tlet i = 0;\n\t\t// start from top: thead, with its borders, plus the first border to afterwards neglect\n\t\tlet y = head_height + row_top_border / 2;\n\t\tlet row_heights = [];\n\t\t// loop items to find new start\n\t\twhile (i < sortedItems.length) {\n\t\t\tconst row_height = height_map[i] || average_height;\n\t\t\trow_heights[i] = row_height;\n\t\t\t// we only want to jump if the full (incl. border) row is away\n\t\t\tif (y + row_height + actual_border_collapsed_width > scroll_top) {\n\t\t\t\t// this is the last index still inside the viewport\n\t\t\t\tnew_start = i;\n\t\t\t\ttop = y - (head_height + row_top_border / 2);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\ty += row_height;\n\t\t\ti += 1;\n\t\t}\n\n\t\tnew_start = Math.max(0, new_start);\n\t\twhile (i < sortedItems.length) {\n\t\t\tconst row_height = height_map[i] || average_height;\n\t\t\ty += row_height;\n\t\t\ti += 1;\n\t\t\tif (y > scroll_top + viewport_height) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tstart = new_start;\n\t\tend = i;\n\t\tconst remaining = sortedItems.length - end;\n\t\tif (end === 0) {\n\t\t\tend = 10;\n\t\t}\n\t\taverage_height = (y - head_height) / end;\n\t\tlet remaining_height = remaining * average_height; // 0\n\t\t// compute height map for remaining items\n\t\twhile (i < sortedItems.length) {\n\t\t\ti += 1;\n\t\t\theight_map[i] = average_height;\n\t\t}\n\t\tbottom = remaining_height;\n\t\tif (!isFinite(bottom)) {\n\t\t\tbottom = 200000;\n\t\t}\n\t}\n\n\texport async function scroll_to_index(\n\t\tindex: number,\n\t\topts: ScrollToOptions,\n\t\talign_end = false\n\t): Promise<void> {\n\t\tawait tick();\n\n\t\tconst _itemHeight = average_height;\n\n\t\tlet distance = index * _itemHeight;\n\t\tif (align_end) {\n\t\t\tdistance = distance - viewport_height + _itemHeight + head_height;\n\t\t}\n\n\t\tconst scrollbar_height = viewport.offsetHeight - viewport.clientHeight;\n\t\tif (scrollbar_height > 0) {\n\t\t\tdistance += scrollbar_height;\n\t\t}\n\n\t\tconst _opts = {\n\t\t\ttop: distance,\n\t\t\tbehavior: \"smooth\" as ScrollBehavior,\n\t\t\t...opts\n\t\t};\n\n\t\tviewport.scrollTo(_opts);\n\t}\n\n\t$: sortedItems = items;\n\n\t$: visible = is_browser\n\t\t? sortedItems.slice(start, end).map((data, i) => {\n\t\t\t\treturn { index: i + start, data };\n\t\t\t})\n\t\t: sortedItems\n\t\t\t\t.slice(0, (max_height / sortedItems.length) * average_height + 1)\n\t\t\t\t.map((data, i) => {\n\t\t\t\t\treturn { index: i + start, data };\n\t\t\t\t});\n\n\tonMount(() => {\n\t\trows = contents.children as HTMLCollectionOf<HTMLTableRowElement>;\n\t\tmounted = true;\n\t\trefresh_height_map(items);\n\t});\n</script>\n\n<svelte-virtual-table-viewport>\n\t<table\n\t\tclass=\"table\"\n\t\tbind:this={viewport}\n\t\tbind:contentRect={viewport_box}\n\t\ton:scroll={handle_scroll}\n\t\tstyle=\"height: {height}; --bw-svt-p-top: {top}px; --bw-svt-p-bottom: {bottom}px; --bw-svt-head-height: {head_height}px; --bw-svt-foot-height: {foot_height}px; --bw-svt-avg-row-height: {average_height}px\"\n\t>\n\t\t<thead class=\"thead\" bind:offsetHeight={head_height}>\n\t\t\t<slot name=\"thead\" />\n\t\t</thead>\n\t\t<tbody bind:this={contents} class=\"tbody\">\n\t\t\t{#if visible.length && visible[0].data.length}\n\t\t\t\t{#each visible as item (item.data[0].id)}\n\t\t\t\t\t<slot name=\"tbody\" item={item.data} index={item.index}>\n\t\t\t\t\t\tMissing Table Row\n\t\t\t\t\t</slot>\n\t\t\t\t{/each}\n\t\t\t{/if}\n\t\t</tbody>\n\t\t<tfoot class=\"tfoot\" bind:offsetHeight={foot_height}>\n\t\t\t<slot name=\"tfoot\" />\n\t\t</tfoot>\n\t</table>\n</svelte-virtual-table-viewport>\n\n<style type=\"text/css\">\n\ttable {\n\t\tposition: relative;\n\t\toverflow-y: scroll;\n\t\toverflow-x: scroll;\n\t\t-webkit-overflow-scrolling: touch;\n\t\tmax-height: 100vh;\n\t\tbox-sizing: border-box;\n\t\tdisplay: block;\n\t\tpadding: 0;\n\t\tmargin: 0;\n\t\tcolor: var(--body-text-color);\n\t\tfont-size: var(--input-text-size);\n\t\tline-height: var(--line-md);\n\t\tfont-family: var(--font-mono);\n\t\tborder-spacing: 0;\n\t\twidth: 100%;\n\t\tscroll-snap-type: x proximity;\n\t\tborder-collapse: separate;\n\t}\n\ttable :is(thead, tfoot, tbody) {\n\t\tdisplay: table;\n\t\ttable-layout: fixed;\n\t\twidth: 100%;\n\t\tbox-sizing: border-box;\n\t}\n\n\ttbody {\n\t\toverflow-x: scroll;\n\t\toverflow-y: hidden;\n\t}\n\n\ttable tbody {\n\t\tpadding-top: var(--bw-svt-p-top);\n\t\tpadding-bottom: var(--bw-svt-p-bottom);\n\t}\n\ttbody {\n\t\tposition: relative;\n\t\tbox-sizing: border-box;\n\t\tborder: 0px solid currentColor;\n\t}\n\n\ttbody > :global(tr:last-child) {\n\t\tborder: none;\n\t}\n\n\ttable :global(td) {\n\t\tscroll-snap-align: start;\n\t}\n\n\ttbody > :global(tr:nth-child(even)) {\n\t\tbackground: var(--table-even-background-fill);\n\t}\n\n\tthead {\n\t\tposition: sticky;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tz-index: var(--layer-1);\n\t\toverflow: hidden;\n\t}\n</style>\n","<script lang=\"ts\">\n\texport let icon: string;\n</script>\n\n{#if icon == \"add-column-right\"}\n\t<svg viewBox=\"0 0 24 24\" width=\"16\" height=\"16\">\n\t\t<rect\n\t\t\tx=\"4\"\n\t\t\ty=\"6\"\n\t\t\twidth=\"4\"\n\t\t\theight=\"12\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tstroke-width=\"2\"\n\t\t\tfill=\"none\"\n\t\t/>\n\t\t<path\n\t\t\td=\"M12 12H19M16 8L19 12L16 16\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tstroke-width=\"2\"\n\t\t\tfill=\"none\"\n\t\t\tstroke-linecap=\"round\"\n\t\t/>\n\t</svg>\n{:else if icon == \"add-column-left\"}\n\t<svg viewBox=\"0 0 24 24\" width=\"16\" height=\"16\">\n\t\t<rect\n\t\t\tx=\"16\"\n\t\t\ty=\"6\"\n\t\t\twidth=\"4\"\n\t\t\theight=\"12\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tstroke-width=\"2\"\n\t\t\tfill=\"none\"\n\t\t/>\n\t\t<path\n\t\t\td=\"M12 12H5M8 8L5 12L8 16\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tstroke-width=\"2\"\n\t\t\tfill=\"none\"\n\t\t\tstroke-linecap=\"round\"\n\t\t/>\n\t</svg>\n{:else if icon == \"add-row-above\"}\n\t<svg viewBox=\"0 0 24 24\" width=\"16\" height=\"16\">\n\t\t<rect\n\t\t\tx=\"6\"\n\t\t\ty=\"16\"\n\t\t\twidth=\"12\"\n\t\t\theight=\"4\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tstroke-width=\"2\"\n\t\t/>\n\t\t<path\n\t\t\td=\"M12 12V5M8 8L12 5L16 8\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tstroke-width=\"2\"\n\t\t\tfill=\"none\"\n\t\t\tstroke-linecap=\"round\"\n\t\t/>\n\t</svg>\n{:else if icon == \"add-row-below\"}\n\t<svg viewBox=\"0 0 24 24\" width=\"16\" height=\"16\">\n\t\t<rect\n\t\t\tx=\"6\"\n\t\t\ty=\"4\"\n\t\t\twidth=\"12\"\n\t\t\theight=\"4\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tstroke-width=\"2\"\n\t\t/>\n\t\t<path\n\t\t\td=\"M12 12V19M8 16L12 19L16 16\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tstroke-width=\"2\"\n\t\t\tfill=\"none\"\n\t\t\tstroke-linecap=\"round\"\n\t\t/>\n\t</svg>\n{:else if icon == \"delete-row\"}\n\t<svg viewBox=\"0 0 24 24\" width=\"16\" height=\"16\">\n\t\t<rect\n\t\t\tx=\"5\"\n\t\t\ty=\"10\"\n\t\t\twidth=\"14\"\n\t\t\theight=\"4\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tstroke-width=\"2\"\n\t\t/>\n\t\t<path\n\t\t\td=\"M8 7L16 17M16 7L8 17\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tstroke-width=\"2\"\n\t\t\tstroke-linecap=\"round\"\n\t\t/>\n\t</svg>\n{:else if icon == \"delete-column\"}\n\t<svg viewBox=\"0 0 24 24\" width=\"16\" height=\"16\">\n\t\t<rect\n\t\t\tx=\"10\"\n\t\t\ty=\"5\"\n\t\t\twidth=\"4\"\n\t\t\theight=\"14\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tstroke-width=\"2\"\n\t\t/>\n\t\t<path\n\t\t\td=\"M7 8L17 16M17 8L7 16\"\n\t\t\tstroke=\"currentColor\"\n\t\t\tstroke-width=\"2\"\n\t\t\tstroke-linecap=\"round\"\n\t\t/>\n\t</svg>\n{/if}\n","<script lang=\"ts\">\n\timport { onMount } from \"svelte\";\n\timport CellMenuIcons from \"./CellMenuIcons.svelte\";\n\timport type { I18nFormatter } from \"js/utils/src\";\n\n\texport let x: number;\n\texport let y: number;\n\texport let on_add_row_above: () => void;\n\texport let on_add_row_below: () => void;\n\texport let on_add_column_left: () => void;\n\texport let on_add_column_right: () => void;\n\texport let row: number;\n\texport let col_count: [number, \"fixed\" | \"dynamic\"];\n\texport let row_count: [number, \"fixed\" | \"dynamic\"];\n\texport let on_delete_row: () => void;\n\texport let on_delete_col: () => void;\n\texport let can_delete_rows: boolean;\n\texport let can_delete_cols: boolean;\n\n\texport let i18n: I18nFormatter;\n\tlet menu_element: HTMLDivElement;\n\n\t$: is_header = row === -1;\n\t$: can_add_rows = row_count[1] === \"dynamic\";\n\t$: can_add_columns = col_count[1] === \"dynamic\";\n\n\tonMount(() => {\n\t\tposition_menu();\n\t});\n\n\tfunction position_menu(): void {\n\t\tif (!menu_element) return;\n\n\t\tconst viewport_width = window.innerWidth;\n\t\tconst viewport_height = window.innerHeight;\n\t\tconst menu_rect = menu_element.getBoundingClientRect();\n\n\t\tlet new_x = x - 30;\n\t\tlet new_y = y - 20;\n\n\t\tif (new_x + menu_rect.width > viewport_width) {\n\t\t\tnew_x = x - menu_rect.width + 10;\n\t\t}\n\n\t\tif (new_y + menu_rect.height > viewport_height) {\n\t\t\tnew_y = y - menu_rect.height + 10;\n\t\t}\n\n\t\tmenu_element.style.left = `${new_x}px`;\n\t\tmenu_element.style.top = `${new_y}px`;\n\t}\n</script>\n\n<div bind:this={menu_element} class=\"cell-menu\">\n\t{#if !is_header && can_add_rows}\n\t\t<button on:click={() => on_add_row_above()}>\n\t\t\t<CellMenuIcons icon=\"add-row-above\" />\n\t\t\t{i18n(\"dataframe.add_row_above\")}\n\t\t</button>\n\t\t<button on:click={() => on_add_row_below()}>\n\t\t\t<CellMenuIcons icon=\"add-row-below\" />\n\t\t\t{i18n(\"dataframe.add_row_below\")}\n\t\t</button>\n\t\t{#if can_delete_rows}\n\t\t\t<button on:click={on_delete_row} class=\"delete\">\n\t\t\t\t<CellMenuIcons icon=\"delete-row\" />\n\t\t\t\t{i18n(\"dataframe.delete_row\")}\n\t\t\t</button>\n\t\t{/if}\n\t{/if}\n\t{#if can_add_columns}\n\t\t<button on:click={() => on_add_column_left()}>\n\t\t\t<CellMenuIcons icon=\"add-column-left\" />\n\t\t\t{i18n(\"dataframe.add_column_left\")}\n\t\t</button>\n\t\t<button on:click={() => on_add_column_right()}>\n\t\t\t<CellMenuIcons icon=\"add-column-right\" />\n\t\t\t{i18n(\"dataframe.add_column_right\")}\n\t\t</button>\n\t\t{#if can_delete_cols}\n\t\t\t<button on:click={on_delete_col} class=\"delete\">\n\t\t\t\t<CellMenuIcons icon=\"delete-column\" />\n\t\t\t\t{i18n(\"dataframe.delete_column\")}\n\t\t\t</button>\n\t\t{/if}\n\t{/if}\n</div>\n\n<style>\n\t.cell-menu {\n\t\tposition: fixed;\n\t\tz-index: var(--layer-2);\n\t\tbackground: var(--background-fill-primary);\n\t\tborder: 1px solid var(--border-color-primary);\n\t\tborder-radius: var(--radius-sm);\n\t\tpadding: var(--size-1);\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tgap: var(--size-1);\n\t\tbox-shadow: var(--shadow-drop-lg);\n\t\tmin-width: 150px;\n\t}\n\n\t.cell-menu button {\n\t\tbackground: none;\n\t\tborder: none;\n\t\tcursor: pointer;\n\t\ttext-align: left;\n\t\tpadding: var(--size-1) var(--size-2);\n\t\tborder-radius: var(--radius-sm);\n\t\tcolor: var(--body-text-color);\n\t\tfont-size: var(--text-sm);\n\t\ttransition:\n\t\t\tbackground-color 0.2s,\n\t\t\tcolor 0.2s;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tgap: var(--size-2);\n\t}\n\n\t.cell-menu button:hover {\n\t\tbackground-color: var(--background-fill-secondary);\n\t}\n\n\t.cell-menu button :global(svg) {\n\t\tfill: currentColor;\n\t\ttransition: fill 0.2s;\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { Maximize, Minimize, Copy, Check } from \"@gradio/icons\";\n\timport { onDestroy } from \"svelte\";\n\n\texport let show_fullscreen_button = false;\n\texport let show_copy_button = false;\n\texport let is_fullscreen = false;\n\texport let on_copy: () => Promise<void>;\n\n\tlet copied = false;\n\tlet timer: ReturnType<typeof setTimeout>;\n\n\tfunction copy_feedback(): void {\n\t\tcopied = true;\n\t\tif (timer) clearTimeout(timer);\n\t\ttimer = setTimeout(() => {\n\t\t\tcopied = false;\n\t\t}, 2000);\n\t}\n\n\tasync function handle_copy(): Promise<void> {\n\t\tawait on_copy();\n\t\tcopy_feedback();\n\t}\n\n\tonDestroy(() => {\n\t\tif (timer) clearTimeout(timer);\n\t});\n</script>\n\n<div class=\"toolbar\" role=\"toolbar\" aria-label=\"Table actions\">\n\t{#if show_copy_button}\n\t\t<button\n\t\t\tclass=\"toolbar-button\"\n\t\t\ton:click={handle_copy}\n\t\t\taria-label={copied ? \"Copied to clipboard\" : \"Copy table data\"}\n\t\t\ttitle={copied ? \"Copied to clipboard\" : \"Copy table data\"}\n\t\t>\n\t\t\t{#if copied}\n\t\t\t\t<Check />\n\t\t\t{:else}\n\t\t\t\t<Copy />\n\t\t\t{/if}\n\t\t</button>\n\t{/if}\n\t{#if show_fullscreen_button}\n\t\t<button\n\t\t\tclass=\"toolbar-button\"\n\t\t\ton:click\n\t\t\taria-label={is_fullscreen ? \"Exit fullscreen\" : \"Enter fullscreen\"}\n\t\t\ttitle={is_fullscreen ? \"Exit fullscreen\" : \"Enter fullscreen\"}\n\t\t>\n\t\t\t{#if is_fullscreen}\n\t\t\t\t<Minimize />\n\t\t\t{:else}\n\t\t\t\t<Maximize />\n\t\t\t{/if}\n\t\t</button>\n\t{/if}\n</div>\n\n<style>\n\t.toolbar {\n\t\tdisplay: flex;\n\t\tjustify-content: flex-end;\n\t\tgap: var(--size-1);\n\t}\n\n\t.toolbar-button {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\twidth: var(--size-6);\n\t\theight: var(--size-6);\n\t\tpadding: var(--size-1);\n\t\tborder: none;\n\t\tborder-radius: var(--radius-sm);\n\t\tbackground: transparent;\n\t\tcolor: var(--body-text-color-subdued);\n\t\tcursor: pointer;\n\t\ttransition: all 0.2s;\n\t}\n\n\t.toolbar-button:hover {\n\t\tbackground: var(--background-fill-secondary);\n\t\tcolor: var(--body-text-color);\n\t}\n\n\t.toolbar-button :global(svg) {\n\t\twidth: var(--size-4);\n\t\theight: var(--size-4);\n\t}\n</style>\n","import type { HeadersWithIDs } from \"./utils\";\n\nexport type TableData = {\n\tvalue: string | number;\n\tid: string;\n}[][];\n\nexport async function copy_table_data(\n\tdata: TableData,\n\theaders?: HeadersWithIDs\n): Promise<void> {\n\tconst header_row = headers\n\t\t? headers.map((h) => String(h.value)).join(\",\")\n\t\t: \"\";\n\tconst table_data = data\n\t\t.map((row) => row.map((cell) => String(cell.value)).join(\",\"))\n\t\t.join(\"\\n\");\n\n\tconst all_data = header_row ? `${header_row}\\n${table_data}` : table_data;\n\n\ttry {\n\t\tif (\"clipboard\" in navigator) {\n\t\t\tawait navigator.clipboard.writeText(all_data);\n\t\t} else {\n\t\t\tconst textArea = document.createElement(\"textarea\");\n\t\t\ttextArea.value = all_data;\n\t\t\ttextArea.style.position = \"absolute\";\n\t\t\ttextArea.style.left = \"-999999px\";\n\t\t\tdocument.body.prepend(textArea);\n\t\t\ttextArea.select();\n\n\t\t\tdocument.execCommand(\"copy\");\n\t\t\ttextArea.remove();\n\t\t}\n\t} catch (error) {\n\t\tconsole.error(\"Failed to copy table data:\", error);\n\t}\n}\n","<script lang=\"ts\">\n\timport { afterUpdate, createEventDispatcher, tick, onMount } from \"svelte\";\n\timport { dsvFormat } from \"d3-dsv\";\n\timport { dequal } from \"dequal/lite\";\n\timport { Upload } from \"@gradio/upload\";\n\n\timport EditableCell from \"./EditableCell.svelte\";\n\timport type { SelectData } from \"@gradio/utils\";\n\timport type { I18nFormatter } from \"js/core/src/gradio_helper\";\n\timport { type Client } from \"@gradio/client\";\n\timport VirtualTable from \"./VirtualTable.svelte\";\n\timport type {\n\t\tHeaders,\n\t\tHeadersWithIDs,\n\t\tDataframeValue,\n\t\tDatatype\n\t} from \"./utils\";\n\timport CellMenu from \"./CellMenu.svelte\";\n\timport Toolbar from \"./Toolbar.svelte\";\n\timport { copy_table_data } from \"./table_utils\";\n\n\texport let datatype: Datatype | Datatype[];\n\texport let label: string | null = null;\n\texport let show_label = true;\n\texport let headers: Headers = [];\n\texport let values: (string | number)[][] = [];\n\texport let col_count: [number, \"fixed\" | \"dynamic\"];\n\texport let row_count: [number, \"fixed\" | \"dynamic\"];\n\texport let latex_delimiters: {\n\t\tleft: string;\n\t\tright: string;\n\t\tdisplay: boolean;\n\t}[];\n\n\texport let editable = true;\n\texport let wrap = false;\n\texport let root: string;\n\texport let i18n: I18nFormatter;\n\n\texport let max_height = 500;\n\texport let line_breaks = true;\n\texport let column_widths: string[] = [];\n\texport let show_row_numbers = false;\n\texport let upload: Client[\"upload\"];\n\texport let stream_handler: Client[\"stream\"];\n\texport let show_fullscreen_button = false;\n\texport let show_copy_button = false;\n\texport let value_is_output = false;\n\n\tlet selected: false | [number, number] = false;\n\tlet clicked_cell: { row: number; col: number } | undefined = undefined;\n\texport let display_value: string[][] | null = null;\n\texport let styling: string[][] | null = null;\n\tlet t_rect: DOMRectReadOnly;\n\n\tconst dispatch = createEventDispatcher<{\n\t\tchange: DataframeValue;\n\t\tinput: undefined;\n\t\tselect: SelectData;\n\t}>();\n\n\tlet editing: false | [number, number] = false;\n\n\tconst get_data_at = (row: number, col: number): string | number =>\n\t\tdata?.[row]?.[col]?.value;\n\n\tlet last_selected: [number, number] | null = null;\n\n\t$: {\n\t\tif (selected !== false && !dequal(selected, last_selected)) {\n\t\t\tconst [row, col] = selected;\n\t\t\tif (!isNaN(row) && !isNaN(col) && data[row]) {\n\t\t\t\tdispatch(\"select\", {\n\t\t\t\t\tindex: [row, col],\n\t\t\t\t\tvalue: get_data_at(row, col),\n\t\t\t\t\trow_value: data[row].map((d) => d.value)\n\t\t\t\t});\n\t\t\t\tlast_selected = selected;\n\t\t\t}\n\t\t}\n\t}\n\n\tlet els: Record<\n\t\tstring,\n\t\t{ cell: null | HTMLTableCellElement; input: null | HTMLInputElement }\n\t> = {};\n\n\tlet data_binding: Record<string, (typeof data)[0][0]> = {};\n\n\tfunction make_id(): string {\n\t\treturn Math.random().toString(36).substring(2, 15);\n\t}\n\n\tfunction make_headers(_head: Headers): HeadersWithIDs {\n\t\tlet _h = _head || [];\n\t\tif (col_count[1] === \"fixed\" && _h.length < col_count[0]) {\n\t\t\tconst fill = Array(col_count[0] - _h.length)\n\t\t\t\t.fill(\"\")\n\t\t\t\t.map((_, i) => `${i + _h.length}`);\n\t\t\t_h = _h.concat(fill);\n\t\t}\n\n\t\tif (!_h || _h.length === 0) {\n\t\t\treturn Array(col_count[0])\n\t\t\t\t.fill(0)\n\t\t\t\t.map((_, i) => {\n\t\t\t\t\tconst _id = make_id();\n\t\t\t\t\tels[_id] = { cell: null, input: null };\n\t\t\t\t\treturn { id: _id, value: JSON.stringify(i + 1) };\n\t\t\t\t});\n\t\t}\n\n\t\treturn _h.map((h, i) => {\n\t\t\tconst _id = make_id();\n\t\t\tels[_id] = { cell: null, input: null };\n\t\t\treturn { id: _id, value: h ?? \"\" };\n\t\t});\n\t}\n\n\tfunction process_data(_values: (string | number)[][]): {\n\t\tvalue: string | number;\n\t\tid: string;\n\t}[][] {\n\t\tconst data_row_length = _values.length;\n\t\treturn Array(row_count[1] === \"fixed\" ? row_count[0] : data_row_length)\n\t\t\t.fill(0)\n\t\t\t.map((_, i) =>\n\t\t\t\tArray(\n\t\t\t\t\tcol_count[1] === \"fixed\"\n\t\t\t\t\t\t? col_count[0]\n\t\t\t\t\t\t: data_row_length > 0\n\t\t\t\t\t\t\t? _values[0].length\n\t\t\t\t\t\t\t: headers.length\n\t\t\t\t)\n\t\t\t\t\t.fill(0)\n\t\t\t\t\t.map((_, j) => {\n\t\t\t\t\t\tconst id = make_id();\n\t\t\t\t\t\tels[id] = els[id] || { input: null, cell: null };\n\t\t\t\t\t\tconst obj = { value: _values?.[i]?.[j] ?? \"\", id };\n\t\t\t\t\t\tdata_binding[id] = obj;\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t})\n\t\t\t);\n\t}\n\n\tlet _headers = make_headers(headers);\n\tlet old_headers: string[] = headers;\n\n\t$: {\n\t\tif (!dequal(headers, old_headers)) {\n\t\t\t_headers = make_headers(headers);\n\t\t\told_headers = JSON.parse(JSON.stringify(headers));\n\t\t}\n\t}\n\n\tlet data: { id: string; value: string | number }[][] = [[]];\n\tlet old_val: undefined | (string | number)[][] = undefined;\n\n\t$: if (!dequal(values, old_val)) {\n\t\tdata = process_data(values as (string | number)[][]);\n\t\told_val = JSON.parse(JSON.stringify(values)) as (string | number)[][];\n\t}\n\n\tlet previous_headers = _headers.map((h) => h.value);\n\tlet previous_data = data.map((row) => row.map((cell) => String(cell.value)));\n\n\tasync function trigger_change(): Promise<void> {\n\t\tconst current_headers = _headers.map((h) => h.value);\n\t\tconst current_data = data.map((row) =>\n\t\t\trow.map((cell) => String(cell.value))\n\t\t);\n\n\t\tif (\n\t\t\t!dequal(current_data, previous_data) ||\n\t\t\t!dequal(current_headers, previous_headers)\n\t\t) {\n\t\t\t// We dispatch the value as part of the change event to ensure that the value is updated\n\t\t\t// in the parent component and the updated value is passed into the user's function\n\t\t\tdispatch(\"change\", {\n\t\t\t\tdata: data.map((row) => row.map((cell) => cell.value)),\n\t\t\t\theaders: _headers.map((h) => h.value),\n\t\t\t\tmetadata: null\n\t\t\t});\n\t\t\tif (!value_is_output) {\n\t\t\t\tdispatch(\"input\");\n\t\t\t}\n\t\t\tprevious_data = current_data;\n\t\t\tprevious_headers = current_headers;\n\t\t}\n\t}\n\n\tfunction get_sort_status(\n\t\tname: string,\n\t\t_sort?: number,\n\t\tdirection?: SortDirection\n\t): \"none\" | \"ascending\" | \"descending\" {\n\t\tif (!_sort) return \"none\";\n\t\tif (headers[_sort] === name) {\n\t\t\tif (direction === \"asc\") return \"ascending\";\n\t\t\tif (direction === \"des\") return \"descending\";\n\t\t}\n\n\t\treturn \"none\";\n\t}\n\n\tfunction get_current_indices(id: string): [number, number] {\n\t\treturn data.reduce(\n\t\t\t(acc, arr, i) => {\n\t\t\t\tconst j = arr.reduce(\n\t\t\t\t\t(_acc, _data, k) => (id === _data.id ? k : _acc),\n\t\t\t\t\t-1\n\t\t\t\t);\n\n\t\t\t\treturn j === -1 ? acc : [i, j];\n\t\t\t},\n\t\t\t[-1, -1]\n\t\t);\n\t}\n\n\tfunction move_cursor(\n\t\tkey: \"ArrowRight\" | \"ArrowLeft\" | \"ArrowDown\" | \"ArrowUp\",\n\t\tcurrent_coords: [number, number]\n\t): void {\n\t\tconst dir = {\n\t\t\tArrowRight: [0, 1],\n\t\t\tArrowLeft: [0, -1],\n\t\t\tArrowDown: [1, 0],\n\t\t\tArrowUp: [-1, 0]\n\t\t}[key];\n\n\t\tconst i = current_coords[0] + dir[0];\n\t\tconst j = current_coords[1] + dir[1];\n\n\t\tif (i < 0 && j <= 0) {\n\t\t\tselected_header = j;\n\t\t\tselected = false;\n\t\t} else {\n\t\t\tconst is_data = data[i]?.[j];\n\t\t\tselected = is_data ? [i, j] : selected;\n\t\t}\n\t}\n\n\tlet clear_on_focus = false;\n\t// eslint-disable-next-line complexity\n\tasync function handle_keydown(event: KeyboardEvent): Promise<void> {\n\t\tif (selected_header !== false && header_edit === false) {\n\t\t\tswitch (event.key) {\n\t\t\t\tcase \"ArrowDown\":\n\t\t\t\t\tselected = [0, selected_header];\n\t\t\t\t\tselected_header = false;\n\t\t\t\t\treturn;\n\t\t\t\tcase \"ArrowLeft\":\n\t\t\t\t\tselected_header =\n\t\t\t\t\t\tselected_header > 0 ? selected_header - 1 : selected_header;\n\t\t\t\t\treturn;\n\t\t\t\tcase \"ArrowRight\":\n\t\t\t\t\tselected_header =\n\t\t\t\t\t\tselected_header < _headers.length - 1\n\t\t\t\t\t\t\t? selected_header + 1\n\t\t\t\t\t\t\t: selected_header;\n\t\t\t\t\treturn;\n\t\t\t\tcase \"Escape\":\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tselected_header = false;\n\t\t\t\t\tbreak;\n\t\t\t\tcase \"Enter\":\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (!selected) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst [i, j] = selected;\n\n\t\tswitch (event.key) {\n\t\t\tcase \"ArrowRight\":\n\t\t\tcase \"ArrowLeft\":\n\t\t\tcase \"ArrowDown\":\n\t\t\tcase \"ArrowUp\":\n\t\t\t\tif (editing) break;\n\t\t\t\tevent.preventDefault();\n\t\t\t\tmove_cursor(event.key, [i, j]);\n\t\t\t\tbreak;\n\n\t\t\tcase \"Escape\":\n\t\t\t\tif (!editable) break;\n\t\t\t\tevent.preventDefault();\n\t\t\t\tediting = false;\n\t\t\t\tbreak;\n\t\t\tcase \"Enter\":\n\t\t\t\tif (!editable) break;\n\t\t\t\tevent.preventDefault();\n\n\t\t\t\tif (event.shiftKey) {\n\t\t\t\t\tadd_row(i);\n\t\t\t\t\tawait tick();\n\n\t\t\t\t\tselected = [i + 1, j];\n\t\t\t\t} else {\n\t\t\t\t\tif (dequal(editing, [i, j])) {\n\t\t\t\t\t\tconst cell_id = data[i][j].id;\n\t\t\t\t\t\tconst input_el = els[cell_id].input;\n\t\t\t\t\t\tif (input_el) {\n\t\t\t\t\t\t\tdata[i][j].value = input_el.value;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tediting = false;\n\t\t\t\t\t\tawait tick();\n\t\t\t\t\t\tselected = [i, j];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tediting = [i, j];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\tcase \"Backspace\":\n\t\t\t\tif (!editable) break;\n\t\t\t\tif (!editing) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tdata[i][j].value = \"\";\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"Delete\":\n\t\t\t\tif (!editable) break;\n\t\t\t\tif (!editing) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tdata[i][j].value = \"\";\n\t\t\t\t}\n\t\t\t\tbreak;\n\t\t\tcase \"Tab\":\n\t\t\t\tlet direction = event.shiftKey ? -1 : 1;\n\n\t\t\t\tlet is_data_x = data[i][j + direction];\n\t\t\t\tlet is_data_y =\n\t\t\t\t\tdata?.[i + direction]?.[direction > 0 ? 0 : _headers.length - 1];\n\n\t\t\t\tif (is_data_x || is_data_y) {\n\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\tselected = is_data_x\n\t\t\t\t\t\t? [i, j + direction]\n\t\t\t\t\t\t: [i + direction, direction > 0 ? 0 : _headers.length - 1];\n\t\t\t\t}\n\t\t\t\tediting = false;\n\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tif (!editable) break;\n\t\t\t\tif (\n\t\t\t\t\t(!editing || (editing && dequal(editing, [i, j]))) &&\n\t\t\t\t\tevent.key.length === 1\n\t\t\t\t) {\n\t\t\t\t\tclear_on_focus = true;\n\t\t\t\t\tediting = [i, j];\n\t\t\t\t}\n\t\t}\n\t}\n\n\ttype SortDirection = \"asc\" | \"des\";\n\tlet sort_direction: SortDirection | undefined;\n\tlet sort_by: number | undefined;\n\n\tfunction handle_sort(col: number): void {\n\t\tif (typeof sort_by !== \"number\" || sort_by !== col) {\n\t\t\tsort_direction = \"asc\";\n\t\t\tsort_by = col;\n\t\t} else {\n\t\t\tif (sort_direction === \"asc\") {\n\t\t\t\tsort_direction = \"des\";\n\t\t\t} else if (sort_direction === \"des\") {\n\t\t\t\tsort_direction = \"asc\";\n\t\t\t}\n\t\t}\n\t}\n\n\tlet header_edit: number | false;\n\n\tlet select_on_focus = false;\n\tlet selected_header: number | false = false;\n\tasync function edit_header(i: number, _select = false): Promise<void> {\n\t\tif (!editable || col_count[1] !== \"dynamic\" || header_edit === i) return;\n\t\tselected = false;\n\t\tselected_header = i;\n\t\theader_edit = i;\n\t\tselect_on_focus = _select;\n\t}\n\n\tfunction end_header_edit(event: CustomEvent<KeyboardEvent>): void {\n\t\tif (!editable) return;\n\n\t\tswitch (event.detail.key) {\n\t\t\tcase \"Escape\":\n\t\t\tcase \"Enter\":\n\t\t\tcase \"Tab\":\n\t\t\t\tevent.preventDefault();\n\t\t\t\tselected = false;\n\t\t\t\tselected_header = header_edit;\n\t\t\t\theader_edit = false;\n\t\t\t\tparent.focus();\n\t\t\t\tbreak;\n\t\t}\n\t}\n\n\tasync function add_row(index?: number): Promise<void> {\n\t\tparent.focus();\n\n\t\tif (row_count[1] !== \"dynamic\") return;\n\t\tif (data.length === 0) {\n\t\t\tvalues = [Array(headers.length).fill(\"\")];\n\t\t\treturn;\n\t\t}\n\n\t\tconst new_row = Array(data[0].length)\n\t\t\t.fill(0)\n\t\t\t.map((_, i) => {\n\t\t\t\tconst _id = make_id();\n\t\t\t\tels[_id] = { cell: null, input: null };\n\t\t\t\treturn { id: _id, value: \"\" };\n\t\t\t});\n\n\t\tif (index !== undefined && index >= 0 && index <= data.length) {\n\t\t\tdata.splice(index, 0, new_row);\n\t\t} else {\n\t\t\tdata.push(new_row);\n\t\t}\n\n\t\tdata = data;\n\t\tselected = [index !== undefined ? index : data.length - 1, 0];\n\t}\n\n\t$: (data || _headers) && trigger_change();\n\n\tasync function add_col(index?: number): Promise<void> {\n\t\tparent.focus();\n\t\tif (col_count[1] !== \"dynamic\") return;\n\n\t\tconst insert_index = index !== undefined ? index : data[0].length;\n\n\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\tconst _id = make_id();\n\t\t\tels[_id] = { cell: null, input: null };\n\t\t\tdata[i].splice(insert_index, 0, { id: _id, value: \"\" });\n\t\t}\n\n\t\theaders.splice(insert_index, 0, `Header ${headers.length + 1}`);\n\n\t\tdata = data;\n\t\theaders = headers;\n\n\t\tawait tick();\n\n\t\trequestAnimationFrame(() => {\n\t\t\tedit_header(insert_index, true);\n\t\t\tconst new_w = parent.querySelectorAll(\"tbody\")[1].offsetWidth;\n\t\t\tparent.querySelectorAll(\"table\")[1].scrollTo({ left: new_w });\n\t\t});\n\t}\n\n\tfunction handle_click_outside(event: Event): void {\n\t\tif (\n\t\t\t(active_cell_menu &&\n\t\t\t\t!(event.target as HTMLElement).closest(\".cell-menu\")) ||\n\t\t\t(active_header_menu &&\n\t\t\t\t!(event.target as HTMLElement).closest(\".cell-menu\"))\n\t\t) {\n\t\t\tactive_cell_menu = null;\n\t\t\tactive_header_menu = null;\n\t\t}\n\n\t\tconst [trigger] = event.composedPath() as HTMLElement[];\n\t\tif (parent.contains(trigger)) {\n\t\t\treturn;\n\t\t}\n\n\t\tclicked_cell = undefined;\n\t\tediting = false;\n\t\tselected = false;\n\t\theader_edit = false;\n\t\tselected_header = false;\n\t\tactive_cell_menu = null;\n\t\tactive_header_menu = null;\n\t}\n\n\tfunction guess_delimitaor(\n\t\ttext: string,\n\t\tpossibleDelimiters: string[]\n\t): string[] {\n\t\treturn possibleDelimiters.filter(weedOut);\n\n\t\tfunction weedOut(delimiter: string): boolean {\n\t\t\tvar cache = -1;\n\t\t\treturn text.split(\"\\n\").every(checkLength);\n\n\t\t\tfunction checkLength(line: string): boolean {\n\t\t\t\tif (!line) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\n\t\t\t\tvar length = line.split(delimiter).length;\n\t\t\t\tif (cache < 0) {\n\t\t\t\t\tcache = length;\n\t\t\t\t}\n\t\t\t\treturn cache === length && length > 1;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction data_uri_to_blob(data_uri: string): Blob {\n\t\tconst byte_str = atob(data_uri.split(\",\")[1]);\n\t\tconst mime_str = data_uri.split(\",\")[0].split(\":\")[1].split(\";\")[0];\n\n\t\tconst ab = new ArrayBuffer(byte_str.length);\n\t\tconst ia = new Uint8Array(ab);\n\n\t\tfor (let i = 0; i < byte_str.length; i++) {\n\t\t\tia[i] = byte_str.charCodeAt(i);\n\t\t}\n\n\t\treturn new Blob([ab], { type: mime_str });\n\t}\n\n\tfunction blob_to_string(blob: Blob): void {\n\t\tconst reader = new FileReader();\n\n\t\tfunction handle_read(e: ProgressEvent<FileReader>): void {\n\t\t\tif (!e?.target?.result || typeof e.target.result !== \"string\") return;\n\n\t\t\tconst [delimiter] = guess_delimitaor(e.target.result, [\",\", \"\\t\"]);\n\n\t\t\tconst [head, ...rest] = dsvFormat(delimiter).parseRows(e.target.result);\n\n\t\t\t_headers = make_headers(\n\t\t\t\tcol_count[1] === \"fixed\" ? head.slice(0, col_count[0]) : head\n\t\t\t);\n\n\t\t\tvalues = rest;\n\t\t\treader.removeEventListener(\"loadend\", handle_read);\n\t\t}\n\n\t\treader.addEventListener(\"loadend\", handle_read);\n\n\t\treader.readAsText(blob);\n\t}\n\n\tlet dragging = false;\n\n\tfunction get_max(\n\t\t_d: { value: any; id: string }[][]\n\t): { value: any; id: string }[] {\n\t\tif (!_d || _d.length === 0 || !_d[0]) return [];\n\t\tlet max = _d[0].slice();\n\t\tfor (let i = 0; i < _d.length; i++) {\n\t\t\tfor (let j = 0; j < _d[i].length; j++) {\n\t\t\t\tif (`${max[j].value}`.length < `${_d[i][j].value}`.length) {\n\t\t\t\t\tmax[j] = _d[i][j];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn max;\n\t}\n\n\t$: max = get_max(data);\n\n\t$: cells[0] && set_cell_widths();\n\tlet cells: HTMLTableCellElement[] = [];\n\tlet parent: HTMLDivElement;\n\tlet table: HTMLTableElement;\n\n\tfunction set_cell_widths(): void {\n\t\tconst widths = cells.map((el, i) => {\n\t\t\treturn el?.clientWidth || 0;\n\t\t});\n\t\tif (widths.length === 0) return;\n\t\tfor (let i = 0; i < widths.length; i++) {\n\t\t\tparent.style.setProperty(\n\t\t\t\t`--cell-width-${i}`,\n\t\t\t\t`${widths[i] - scrollbar_width / widths.length}px`\n\t\t\t);\n\t\t}\n\t}\n\n\tlet table_height: number =\n\t\tvalues.slice(0, (max_height / values.length) * 37).length * 37 + 37;\n\tlet scrollbar_width = 0;\n\n\tfunction sort_data(\n\t\t_data: typeof data,\n\t\t_display_value: string[][] | null,\n\t\t_styling: string[][] | null,\n\t\tcol?: number,\n\t\tdir?: SortDirection\n\t): void {\n\t\tlet id = null;\n\t\t//Checks if the selected cell is still in the data\n\t\tif (selected && selected[0] in data && selected[1] in data[selected[0]]) {\n\t\t\tid = data[selected[0]][selected[1]].id;\n\t\t}\n\t\tif (typeof col !== \"number\" || !dir) {\n\t\t\treturn;\n\t\t}\n\t\tconst indices = [...Array(_data.length).keys()];\n\n\t\tif (dir === \"asc\") {\n\t\t\tindices.sort((i, j) =>\n\t\t\t\t_data[i][col].value < _data[j][col].value ? -1 : 1\n\t\t\t);\n\t\t} else if (dir === \"des\") {\n\t\t\tindices.sort((i, j) =>\n\t\t\t\t_data[i][col].value > _data[j][col].value ? -1 : 1\n\t\t\t);\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\t// sort all the data and metadata based on the values in the data\n\t\tconst temp_data = [..._data];\n\t\tconst temp_display_value = _display_value ? [..._display_value] : null;\n\t\tconst temp_styling = _styling ? [..._styling] : null;\n\t\tindices.forEach((originalIndex, sortedIndex) => {\n\t\t\t_data[sortedIndex] = temp_data[originalIndex];\n\t\t\tif (_display_value && temp_display_value)\n\t\t\t\t_display_value[sortedIndex] = temp_display_value[originalIndex];\n\t\t\tif (_styling && temp_styling)\n\t\t\t\t_styling[sortedIndex] = temp_styling[originalIndex];\n\t\t});\n\n\t\tdata = data;\n\n\t\tif (id) {\n\t\t\tconst [i, j] = get_current_indices(id);\n\t\t\tselected = [i, j];\n\t\t}\n\t}\n\n\t$: sort_data(data, display_value, styling, sort_by, sort_direction);\n\n\t$: selected_index = !!selected && selected[0];\n\n\tlet is_visible = false;\n\n\tonMount(() => {\n\t\tconst observer = new IntersectionObserver((entries, observer) => {\n\t\t\tentries.forEach((entry) => {\n\t\t\t\tif (entry.isIntersecting && !is_visible) {\n\t\t\t\t\tset_cell_widths();\n\t\t\t\t\tdata = data;\n\t\t\t\t}\n\n\t\t\t\tis_visible = entry.isIntersecting;\n\t\t\t});\n\t\t});\n\n\t\tobserver.observe(parent);\n\n\t\tdocument.addEventListener(\"click\", handle_click_outside);\n\t\twindow.addEventListener(\"resize\", handle_resize);\n\t\tdocument.addEventListener(\"fullscreenchange\", handle_fullscreen_change);\n\n\t\treturn () => {\n\t\t\tobserver.disconnect();\n\t\t\tdocument.removeEventListener(\"click\", handle_click_outside);\n\t\t\twindow.removeEventListener(\"resize\", handle_resize);\n\t\t\tdocument.removeEventListener(\n\t\t\t\t\"fullscreenchange\",\n\t\t\t\thandle_fullscreen_change\n\t\t\t);\n\t\t};\n\t});\n\n\tlet highlighted_column: number | null = null;\n\n\tlet active_cell_menu: {\n\t\trow: number;\n\t\tcol: number;\n\t\tx: number;\n\t\ty: number;\n\t} | null = null;\n\n\tfunction toggle_cell_menu(event: MouseEvent, row: number, col: number): void {\n\t\tevent.stopPropagation();\n\t\tif (\n\t\t\tactive_cell_menu &&\n\t\t\tactive_cell_menu.row === row &&\n\t\t\tactive_cell_menu.col === col\n\t\t) {\n\t\t\tactive_cell_menu = null;\n\t\t} else {\n\t\t\tconst cell = (event.target as HTMLElement).closest(\"td\");\n\t\t\tif (cell) {\n\t\t\t\tconst rect = cell.getBoundingClientRect();\n\t\t\t\tactive_cell_menu = {\n\t\t\t\t\trow,\n\t\t\t\t\tcol,\n\t\t\t\t\tx: rect.right,\n\t\t\t\t\ty: rect.bottom\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction add_row_at(index: number, position: \"above\" | \"below\"): void {\n\t\tconst row_index = position === \"above\" ? index : index + 1;\n\t\tadd_row(row_index);\n\t\tactive_cell_menu = null;\n\t\tactive_header_menu = null;\n\t}\n\n\tfunction add_col_at(index: number, position: \"left\" | \"right\"): void {\n\t\tconst col_index = position === \"left\" ? index : index + 1;\n\t\tadd_col(col_index);\n\t\tactive_cell_menu = null;\n\t\tactive_header_menu = null;\n\t}\n\n\tfunction handle_resize(): void {\n\t\tactive_cell_menu = null;\n\t\tactive_header_menu = null;\n\t\tset_cell_widths();\n\t}\n\n\tlet active_button: {\n\t\ttype: \"header\" | \"cell\";\n\t\trow?: number;\n\t\tcol: number;\n\t} | null = null;\n\n\tfunction toggle_header_button(col: number): void {\n\t\tif (active_button?.type === \"header\" && active_button.col === col) {\n\t\t\tactive_button = null;\n\t\t} else {\n\t\t\tactive_button = { type: \"header\", col };\n\t\t}\n\t}\n\n\tfunction toggle_cell_button(row: number, col: number): void {\n\t\tif (\n\t\t\tactive_button?.type === \"cell\" &&\n\t\t\tactive_button.row === row &&\n\t\t\tactive_button.col === col\n\t\t) {\n\t\t\tactive_button = null;\n\t\t} else {\n\t\t\tactive_button = { type: \"cell\", row, col };\n\t\t}\n\t}\n\n\tlet active_header_menu: {\n\t\tcol: number;\n\t\tx: number;\n\t\ty: number;\n\t} | null = null;\n\n\tlet is_fullscreen = false;\n\n\tfunction toggle_fullscreen(): void {\n\t\tif (!document.fullscreenElement) {\n\t\t\tparent.requestFullscreen();\n\t\t\tis_fullscreen = true;\n\t\t} else {\n\t\t\tdocument.exitFullscreen();\n\t\t\tis_fullscreen = false;\n\t\t}\n\t}\n\n\tfunction handle_fullscreen_change(): void {\n\t\tis_fullscreen = !!document.fullscreenElement;\n\t}\n\n\tasync function handle_copy(): Promise<void> {\n\t\tawait copy_table_data(data, _headers);\n\t}\n\n\tfunction toggle_header_menu(event: MouseEvent, col: number): void {\n\t\tevent.stopPropagation();\n\t\tif (active_header_menu && active_header_menu.col === col) {\n\t\t\tactive_header_menu = null;\n\t\t} else {\n\t\t\tconst header = (event.target as HTMLElement).closest(\"th\");\n\t\t\tif (header) {\n\t\t\t\tconst rect = header.getBoundingClientRect();\n\t\t\t\tactive_header_menu = {\n\t\t\t\t\tcol,\n\t\t\t\t\tx: rect.right,\n\t\t\t\t\ty: rect.bottom\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\tafterUpdate(() => {\n\t\tvalue_is_output = false;\n\t});\n\n\tasync function delete_row(index: number): Promise<void> {\n\t\tparent.focus();\n\t\tif (row_count[1] !== \"dynamic\") return;\n\t\tif (data.length <= 1) return;\n\t\tdata.splice(index, 1);\n\t\tdata = data;\n\t\tselected = false;\n\t}\n\n\tasync function delete_col(index: number): Promise<void> {\n\t\tparent.focus();\n\t\tif (col_count[1] !== \"dynamic\") return;\n\t\tif (data[0].length <= 1) return;\n\n\t\t_headers.splice(index, 1);\n\t\t_headers = _headers;\n\n\t\tdata.forEach((row) => {\n\t\t\trow.splice(index, 1);\n\t\t});\n\t\tdata = data;\n\t\tselected = false;\n\t}\n\n\tfunction delete_row_at(index: number): void {\n\t\tdelete_row(index);\n\t\tactive_cell_menu = null;\n\t\tactive_header_menu = null;\n\t}\n\n\tfunction delete_col_at(index: number): void {\n\t\tdelete_col(index);\n\t\tactive_cell_menu = null;\n\t\tactive_header_menu = null;\n\t}\n</script>\n\n<svelte:window on:resize={() => set_cell_widths()} />\n\n<div class=\"table-container\">\n\t<div class=\"header-row\">\n\t\t{#if label && label.length !== 0 && show_label}\n\t\t\t<div class=\"label\">\n\t\t\t\t<p>{label}</p>\n\t\t\t</div>\n\t\t{/if}\n\t\t<Toolbar\n\t\t\t{show_fullscreen_button}\n\t\t\t{is_fullscreen}\n\t\t\ton:click={toggle_fullscreen}\n\t\t\ton_copy={handle_copy}\n\t\t\t{show_copy_button}\n\t\t/>\n\t</div>\n\t<div\n\t\tbind:this={parent}\n\t\tclass=\"table-wrap\"\n\t\tclass:dragging\n\t\tclass:no-wrap={!wrap}\n\t\tstyle=\"height:{table_height}px\"\n\t\ton:keydown={(e) => handle_keydown(e)}\n\t\trole=\"grid\"\n\t\ttabindex=\"0\"\n\t>\n\t\t<table\n\t\t\tbind:contentRect={t_rect}\n\t\t\tbind:this={table}\n\t\t\tclass:fixed-layout={column_widths.length != 0}\n\t\t>\n\t\t\t{#if label && label.length !== 0}\n\t\t\t\t<caption class=\"sr-only\">{label}</caption>\n\t\t\t{/if}\n\t\t\t<thead>\n\t\t\t\t<tr>\n\t\t\t\t\t{#if show_row_numbers}\n\t\t\t\t\t\t<th class=\"row-number-header\"></th>\n\t\t\t\t\t{/if}\n\t\t\t\t\t{#each _headers as { value, id }, i (id)}\n\t\t\t\t\t\t<th\n\t\t\t\t\t\t\tclass:editing={header_edit === i}\n\t\t\t\t\t\t\taria-sort={get_sort_status(value, sort_by, sort_direction)}\n\t\t\t\t\t\t\tstyle:width={column_widths.length ? column_widths[i] : undefined}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div class=\"cell-wrap\">\n\t\t\t\t\t\t\t\t<EditableCell\n\t\t\t\t\t\t\t\t\t{value}\n\t\t\t\t\t\t\t\t\t{latex_delimiters}\n\t\t\t\t\t\t\t\t\t{line_breaks}\n\t\t\t\t\t\t\t\t\theader\n\t\t\t\t\t\t\t\t\tedit={false}\n\t\t\t\t\t\t\t\t\tel={null}\n\t\t\t\t\t\t\t\t\t{root}\n\t\t\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\t\tclass:sorted={sort_by === i}\n\t\t\t\t\t\t\t\t\tclass:des={sort_by === i && sort_direction === \"des\"}\n\t\t\t\t\t\t\t\t\tclass=\"sort-button {sort_direction} \"\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\t\t\t\twidth=\"1em\"\n\t\t\t\t\t\t\t\t\t\theight=\"1em\"\n\t\t\t\t\t\t\t\t\t\tviewBox=\"0 0 9 7\"\n\t\t\t\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<path d=\"M4.49999 0L8.3971 6.75H0.602875L4.49999 0Z\" />\n\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</th>\n\t\t\t\t\t{/each}\n\t\t\t\t</tr>\n\t\t\t</thead>\n\t\t\t<tbody>\n\t\t\t\t<tr>\n\t\t\t\t\t{#each max as { value, id }, j (id)}\n\t\t\t\t\t\t<td tabindex=\"-1\" bind:this={cells[j]}>\n\t\t\t\t\t\t\t<div class=\"cell-wrap\">\n\t\t\t\t\t\t\t\t<EditableCell\n\t\t\t\t\t\t\t\t\t{value}\n\t\t\t\t\t\t\t\t\t{latex_delimiters}\n\t\t\t\t\t\t\t\t\t{line_breaks}\n\t\t\t\t\t\t\t\t\tdatatype={Array.isArray(datatype) ? datatype[j] : datatype}\n\t\t\t\t\t\t\t\t\tedit={false}\n\t\t\t\t\t\t\t\t\tel={null}\n\t\t\t\t\t\t\t\t\t{root}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t{/each}\n\t\t\t\t</tr>\n\t\t\t</tbody>\n\t\t</table>\n\t\t<Upload\n\t\t\t{upload}\n\t\t\t{stream_handler}\n\t\t\tflex={false}\n\t\t\tcenter={false}\n\t\t\tboundedheight={false}\n\t\t\tdisable_click={true}\n\t\t\t{root}\n\t\t\ton:load={(e) => blob_to_string(data_uri_to_blob(e.detail.data))}\n\t\t\tbind:dragging\n\t\t>\n\t\t\t<VirtualTable\n\t\t\t\tbind:items={data}\n\t\t\t\t{max_height}\n\t\t\t\tbind:actual_height={table_height}\n\t\t\t\tbind:table_scrollbar_width={scrollbar_width}\n\t\t\t\tselected={selected_index}\n\t\t\t>\n\t\t\t\t{#if label && label.length !== 0}\n\t\t\t\t\t<caption class=\"sr-only\">{label}</caption>\n\t\t\t\t{/if}\n\t\t\t\t<tr slot=\"thead\">\n\t\t\t\t\t{#if show_row_numbers}\n\t\t\t\t\t\t<th class=\"row-number-header\"></th>\n\t\t\t\t\t{/if}\n\t\t\t\t\t{#each _headers as { value, id }, i (id)}\n\t\t\t\t\t\t<th\n\t\t\t\t\t\t\tclass:focus={header_edit === i || selected_header === i}\n\t\t\t\t\t\t\taria-sort={get_sort_status(value, sort_by, sort_direction)}\n\t\t\t\t\t\t\tstyle=\"width: var(--cell-width-{i});\"\n\t\t\t\t\t\t\ton:click={() => {\n\t\t\t\t\t\t\t\ttoggle_header_button(i);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div class=\"cell-wrap\">\n\t\t\t\t\t\t\t\t<div class=\"header-content\">\n\t\t\t\t\t\t\t\t\t<EditableCell\n\t\t\t\t\t\t\t\t\t\tbind:value={_headers[i].value}\n\t\t\t\t\t\t\t\t\t\tbind:el={els[id].input}\n\t\t\t\t\t\t\t\t\t\t{latex_delimiters}\n\t\t\t\t\t\t\t\t\t\t{line_breaks}\n\t\t\t\t\t\t\t\t\t\tedit={header_edit === i}\n\t\t\t\t\t\t\t\t\t\ton:keydown={end_header_edit}\n\t\t\t\t\t\t\t\t\t\ton:dblclick={() => edit_header(i)}\n\t\t\t\t\t\t\t\t\t\theader\n\t\t\t\t\t\t\t\t\t\t{root}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclass:sorted={sort_by === i}\n\t\t\t\t\t\t\t\t\t\tclass:des={sort_by === i && sort_direction === \"des\"}\n\t\t\t\t\t\t\t\t\t\tclass=\"sort-button {sort_direction}\"\n\t\t\t\t\t\t\t\t\t\ttabindex=\"0\"\n\t\t\t\t\t\t\t\t\t\ton:click={(event) => {\n\t\t\t\t\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t\t\t\t\t\thandle_sort(i);\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<svg\n\t\t\t\t\t\t\t\t\t\t\twidth=\"1em\"\n\t\t\t\t\t\t\t\t\t\t\theight=\"1em\"\n\t\t\t\t\t\t\t\t\t\t\tviewBox=\"0 0 9 7\"\n\t\t\t\t\t\t\t\t\t\t\tfill=\"none\"\n\t\t\t\t\t\t\t\t\t\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t<path d=\"M4.49999 0L8.3971 6.75H0.602875L4.49999 0Z\" />\n\t\t\t\t\t\t\t\t\t\t</svg>\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t\t{#if editable}\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclass=\"cell-menu-button\"\n\t\t\t\t\t\t\t\t\t\ton:click={(event) => toggle_header_menu(event, i)}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t⋮\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</th>\n\t\t\t\t\t{/each}\n\t\t\t\t</tr>\n\n\t\t\t\t<tr slot=\"tbody\" let:item let:index class:row_odd={index % 2 === 0}>\n\t\t\t\t\t{#if show_row_numbers}\n\t\t\t\t\t\t<td class=\"row-number\" title={`Row ${index + 1}`}>{index + 1}</td>\n\t\t\t\t\t{/if}\n\t\t\t\t\t{#each item as { value, id }, j (id)}\n\t\t\t\t\t\t<td\n\t\t\t\t\t\t\ttabindex=\"0\"\n\t\t\t\t\t\t\ton:touchstart={(event) => {\n\t\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t\t\tclear_on_focus = false;\n\t\t\t\t\t\t\t\tclicked_cell = { row: index, col: j };\n\t\t\t\t\t\t\t\tselected = [index, j];\n\t\t\t\t\t\t\t\tselected_header = false;\n\t\t\t\t\t\t\t\theader_edit = false;\n\t\t\t\t\t\t\t\tif (editable) {\n\t\t\t\t\t\t\t\t\tediting = [index, j];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttoggle_cell_button(index, j);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\ton:mousedown={(event) => {\n\t\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\ton:click={(event) => {\n\t\t\t\t\t\t\t\tevent.preventDefault();\n\t\t\t\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\t\t\t\tclear_on_focus = false;\n\t\t\t\t\t\t\t\tactive_cell_menu = null;\n\t\t\t\t\t\t\t\tactive_header_menu = null;\n\t\t\t\t\t\t\t\tclicked_cell = { row: index, col: j };\n\t\t\t\t\t\t\t\tselected = [index, j];\n\t\t\t\t\t\t\t\tselected_header = false;\n\t\t\t\t\t\t\t\theader_edit = false;\n\t\t\t\t\t\t\t\tif (editable) {\n\t\t\t\t\t\t\t\t\tediting = [index, j];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttoggle_cell_button(index, j);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tstyle:width=\"var(--cell-width-{j})\"\n\t\t\t\t\t\t\tstyle={styling?.[index]?.[j] || \"\"}\n\t\t\t\t\t\t\tclass:focus={dequal(selected, [index, j])}\n\t\t\t\t\t\t\tclass:menu-active={active_cell_menu &&\n\t\t\t\t\t\t\t\tactive_cell_menu.row === index &&\n\t\t\t\t\t\t\t\tactive_cell_menu.col === j}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div class=\"cell-wrap\">\n\t\t\t\t\t\t\t\t<EditableCell\n\t\t\t\t\t\t\t\t\tbind:value={data[index][j].value}\n\t\t\t\t\t\t\t\t\tbind:el={els[id].input}\n\t\t\t\t\t\t\t\t\tdisplay_value={display_value?.[index]?.[j]}\n\t\t\t\t\t\t\t\t\t{latex_delimiters}\n\t\t\t\t\t\t\t\t\t{line_breaks}\n\t\t\t\t\t\t\t\t\t{editable}\n\t\t\t\t\t\t\t\t\tedit={dequal(editing, [index, j])}\n\t\t\t\t\t\t\t\t\tdatatype={Array.isArray(datatype) ? datatype[j] : datatype}\n\t\t\t\t\t\t\t\t\ton:blur={() => {\n\t\t\t\t\t\t\t\t\t\tclear_on_focus = false;\n\t\t\t\t\t\t\t\t\t\tparent.focus();\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t{clear_on_focus}\n\t\t\t\t\t\t\t\t\t{root}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t{#if editable}\n\t\t\t\t\t\t\t\t\t<button\n\t\t\t\t\t\t\t\t\t\tclass=\"cell-menu-button\"\n\t\t\t\t\t\t\t\t\t\ton:click={(event) => toggle_cell_menu(event, index, j)}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t⋮\n\t\t\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t\t{/if}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t{/each}\n\t\t\t\t</tr>\n\t\t\t</VirtualTable>\n\t\t</Upload>\n\t</div>\n</div>\n\n{#if active_cell_menu}\n\t<CellMenu\n\t\tx={active_cell_menu.x}\n\t\ty={active_cell_menu.y}\n\t\trow={active_cell_menu.row}\n\t\t{col_count}\n\t\t{row_count}\n\t\ton_add_row_above={() => add_row_at(active_cell_menu?.row || 0, \"above\")}\n\t\ton_add_row_below={() => add_row_at(active_cell_menu?.row || 0, \"below\")}\n\t\ton_add_column_left={() => add_col_at(active_cell_menu?.col || 0, \"left\")}\n\t\ton_add_column_right={() => add_col_at(active_cell_menu?.col || 0, \"right\")}\n\t\ton_delete_row={() => delete_row_at(active_cell_menu?.row || 0)}\n\t\ton_delete_col={() => delete_col_at(active_cell_menu?.col || 0)}\n\t\tcan_delete_rows={data.length > 1}\n\t\tcan_delete_cols={data[0].length > 1}\n\t\t{i18n}\n\t/>\n{/if}\n\n{#if active_header_menu !== null}\n\t<CellMenu\n\t\t{i18n}\n\t\tx={active_header_menu.x}\n\t\ty={active_header_menu.y}\n\t\trow={-1}\n\t\t{col_count}\n\t\t{row_count}\n\t\ton_add_row_above={() => add_row_at(active_cell_menu?.row ?? -1, \"above\")}\n\t\ton_add_row_below={() => add_row_at(active_cell_menu?.row ?? -1, \"below\")}\n\t\ton_add_column_left={() => add_col_at(active_header_menu?.col ?? -1, \"left\")}\n\t\ton_add_column_right={() =>\n\t\t\tadd_col_at(active_header_menu?.col ?? -1, \"right\")}\n\t\ton_delete_row={() => delete_row_at(active_cell_menu?.row ?? -1)}\n\t\ton_delete_col={() => delete_col_at(active_header_menu?.col ?? -1)}\n\t\tcan_delete_rows={false}\n\t\tcan_delete_cols={data[0].length > 1}\n\t/>\n{/if}\n\n<style>\n\t.button-wrap:hover svg {\n\t\tcolor: var(--color-accent);\n\t}\n\n\t.button-wrap svg {\n\t\tmargin-right: var(--size-1);\n\t\tmargin-left: -5px;\n\t}\n\n\t.label p {\n\t\tposition: relative;\n\t\tz-index: var(--layer-4);\n\t\tmargin-bottom: var(--size-2);\n\t\tcolor: var(--block-label-text-color);\n\t\tfont-size: var(--block-label-text-size);\n\t}\n\n\t.table-wrap {\n\t\tposition: relative;\n\t\ttransition: 150ms;\n\t\tborder: 1px solid var(--border-color-primary);\n\t\tborder-radius: var(--table-radius);\n\t\toverflow: hidden;\n\t}\n\n\t.table-wrap:focus-within {\n\t\toutline: none;\n\t\tbackground-color: none;\n\t}\n\n\t.dragging {\n\t\tborder-color: var(--color-accent);\n\t}\n\n\t.no-wrap {\n\t\twhite-space: nowrap;\n\t}\n\n\ttable {\n\t\tposition: absolute;\n\t\topacity: 0;\n\t\ttransition: 150ms;\n\t\twidth: var(--size-full);\n\t\ttable-layout: auto;\n\t\tcolor: var(--body-text-color);\n\t\tfont-size: var(--input-text-size);\n\t\tline-height: var(--line-md);\n\t\tfont-family: var(--font-mono);\n\t\tborder-spacing: 0;\n\t}\n\n\tdiv:not(.no-wrap) td {\n\t\toverflow-wrap: anywhere;\n\t}\n\n\tdiv.no-wrap td {\n\t\toverflow-x: hidden;\n\t}\n\n\ttable.fixed-layout {\n\t\ttable-layout: fixed;\n\t}\n\n\tthead {\n\t\tposition: sticky;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tz-index: var(--layer-1);\n\t\tbox-shadow: var(--shadow-drop);\n\t}\n\n\ttr {\n\t\tborder-bottom: 1px solid var(--border-color-primary);\n\t\ttext-align: left;\n\t}\n\n\ttr > * + * {\n\t\tborder-right-width: 0px;\n\t\tborder-left-width: 1px;\n\t\tborder-style: solid;\n\t\tborder-color: var(--border-color-primary);\n\t}\n\n\tth,\n\ttd {\n\t\t--ring-color: transparent;\n\t\tposition: relative;\n\t\toutline: none;\n\t\tbox-shadow: inset 0 0 0 1px var(--ring-color);\n\t\tpadding: 0;\n\t}\n\n\tth:first-child {\n\t\tborder-top-left-radius: var(--table-radius);\n\t}\n\n\tth:last-child {\n\t\tborder-top-right-radius: var(--table-radius);\n\t}\n\n\tth.focus,\n\ttd.focus {\n\t\t--ring-color: var(--color-accent);\n\t}\n\n\ttr:last-child td:first-child {\n\t\tborder-bottom-left-radius: var(--table-radius);\n\t}\n\n\ttr:last-child td:last-child {\n\t\tborder-bottom-right-radius: var(--table-radius);\n\t}\n\n\ttr th {\n\t\tbackground: var(--table-even-background-fill);\n\t}\n\n\tth svg {\n\t\tfill: currentColor;\n\t\tfont-size: 10px;\n\t}\n\n\t.sort-button {\n\t\tdisplay: flex;\n\t\tflex: none;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\ttransition: 150ms;\n\t\tcursor: pointer;\n\t\tpadding: var(--size-2);\n\t\tcolor: var(--body-text-color-subdued);\n\t\tline-height: var(--text-sm);\n\t}\n\n\t.sort-button:hover {\n\t\tcolor: var(--body-text-color);\n\t}\n\n\t.des {\n\t\ttransform: scaleY(-1);\n\t}\n\n\t.sort-button.sorted {\n\t\tcolor: var(--color-accent);\n\t}\n\n\t.editing {\n\t\tbackground: var(--table-editing);\n\t}\n\n\t.cell-wrap {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\toutline: none;\n\t\theight: var(--size-full);\n\t\tmin-height: var(--size-9);\n\t\toverflow: hidden;\n\t}\n\n\t.header-content {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\toverflow: hidden;\n\t\tflex-grow: 1;\n\t\tmin-width: 0;\n\t}\n\n\t.controls-wrap {\n\t\tdisplay: flex;\n\t\tjustify-content: flex-end;\n\t\tpadding-top: var(--size-2);\n\t}\n\n\t.row_odd {\n\t\tbackground: var(--table-odd-background-fill);\n\t}\n\n\t.row_odd.focus {\n\t\tbackground: var(--background-fill-primary);\n\t}\n\n\ttable {\n\t\tborder-collapse: separate;\n\t}\n\n\t.cell-menu-button {\n\t\tflex-shrink: 0;\n\t\tdisplay: none;\n\t\tbackground-color: var(--block-background-fill);\n\t\tborder: 1px solid var(--border-color-primary);\n\t\tborder-radius: var(--block-radius);\n\t\twidth: var(--size-5);\n\t\theight: var(--size-5);\n\t\tmin-width: var(--size-5);\n\t\tpadding: 0;\n\t\tmargin-right: var(--spacing-sm);\n\t\tz-index: var(--layer-1);\n\t}\n\n\t.cell-menu-button:hover {\n\t\tbackground-color: var(--color-bg-hover);\n\t}\n\n\ttd.focus .cell-menu-button {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t}\n\n\tth .header-content {\n\t\twhite-space: normal;\n\t\toverflow-wrap: break-word;\n\t\tword-break: break-word;\n\t}\n\n\t.table-container {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tgap: var(--size-2);\n\t}\n\n\t.row-number,\n\t.row-number-header {\n\t\twidth: var(--size-7);\n\t\tmin-width: var(--size-7);\n\t\ttext-align: center;\n\t\tbackground: var(--table-even-background-fill);\n\t\tposition: sticky;\n\t\tleft: 0;\n\t\tfont-size: var(--input-text-size);\n\t\tcolor: var(--body-text-color);\n\t\tpadding: var(--size-1) var(--size-2);\n\t\toverflow: hidden;\n\t\ttext-overflow: ellipsis;\n\t\twhite-space: nowrap;\n\t\tfont-weight: var(--weight-semibold);\n\t}\n\n\t.row-number-header {\n\t\tz-index: var(--layer-2);\n\t}\n\n\t.row-number {\n\t\tz-index: var(--layer-1);\n\t}\n\n\t:global(tbody > tr:nth-child(odd)) .row-number {\n\t\tbackground: var(--table-odd-background-fill);\n\t}\n\n\t.header-row {\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t\tgap: var(--size-2);\n\t\theight: var(--size-6);\n\t\tmin-height: var(--size-6);\n\t}\n\n\t.label {\n\t\tflex: 1;\n\t}\n\n\t.label p {\n\t\tposition: relative;\n\t\tz-index: var(--layer-4);\n\t\tmargin: 0;\n\t\tcolor: var(--block-label-text-color);\n\t\tfont-size: var(--block-label-text-size);\n\t}\n</style>\n","<svelte:options accessors={true} />\n\n<script context=\"module\" lang=\"ts\">\n\texport { default as BaseDataFrame } from \"./shared/Table.svelte\";\n\texport { default as BaseExample } from \"./Example.svelte\";\n</script>\n\n<script lang=\"ts\">\n\timport type { Gradio, SelectData } from \"@gradio/utils\";\n\timport { Block } from \"@gradio/atoms\";\n\timport Table from \"./shared/Table.svelte\";\n\timport { StatusTracker } from \"@gradio/statustracker\";\n\timport type { LoadingStatus } from \"@gradio/statustracker\";\n\timport type { Headers, Datatype, DataframeValue } from \"./shared/utils\";\n\texport let headers: Headers = [];\n\texport let elem_id = \"\";\n\texport let elem_classes: string[] = [];\n\texport let visible = true;\n\texport let value: DataframeValue = {\n\t\tdata: [[\"\", \"\", \"\"]],\n\t\theaders: [\"1\", \"2\", \"3\"],\n\t\tmetadata: null\n\t};\n\texport let value_is_output = false;\n\texport let col_count: [number, \"fixed\" | \"dynamic\"];\n\texport let row_count: [number, \"fixed\" | \"dynamic\"];\n\texport let label: string | null = null;\n\texport let show_label = true;\n\texport let wrap: boolean;\n\texport let datatype: Datatype | Datatype[];\n\texport let scale: number | null = null;\n\texport let min_width: number | undefined = undefined;\n\texport let root: string;\n\n\texport let line_breaks = true;\n\texport let column_widths: string[] = [];\n\texport let gradio: Gradio<{\n\t\tchange: never;\n\t\tselect: SelectData;\n\t\tinput: never;\n\t\tclear_status: LoadingStatus;\n\t}>;\n\texport let latex_delimiters: {\n\t\tleft: string;\n\t\tright: string;\n\t\tdisplay: boolean;\n\t}[];\n\texport let max_height: number | undefined = undefined;\n\texport let loading_status: LoadingStatus;\n\texport let interactive: boolean;\n\texport let show_fullscreen_button = false;\n\texport let show_copy_button = false;\n\n\t$: _headers = [...(value.headers || headers)];\n\t$: cell_values = value.data ? [...value.data] : [];\n\t$: display_value = value?.metadata?.display_value\n\t\t? [...value?.metadata?.display_value]\n\t\t: null;\n\t$: styling =\n\t\t!interactive && value?.metadata?.styling\n\t\t\t? [...value?.metadata?.styling]\n\t\t\t: null;\n</script>\n\n<Block\n\t{visible}\n\tpadding={false}\n\t{elem_id}\n\t{elem_classes}\n\tcontainer={false}\n\t{scale}\n\t{min_width}\n\tallow_overflow={false}\n>\n\t<StatusTracker\n\t\tautoscroll={gradio.autoscroll}\n\t\ti18n={gradio.i18n}\n\t\t{...loading_status}\n\t\ton:clear_status={() => gradio.dispatch(\"clear_status\", loading_status)}\n\t/>\n\t<Table\n\t\t{root}\n\t\t{label}\n\t\t{show_label}\n\t\t{row_count}\n\t\t{col_count}\n\t\tvalues={cell_values}\n\t\t{display_value}\n\t\t{styling}\n\t\theaders={_headers}\n\t\ton:change={(e) => {\n\t\t\tvalue = e.detail;\n\t\t\tgradio.dispatch(\"change\");\n\t\t}}\n\t\ton:input={(e) => gradio.dispatch(\"input\")}\n\t\ton:select={(e) => gradio.dispatch(\"select\", e.detail)}\n\t\t{wrap}\n\t\t{datatype}\n\t\t{latex_delimiters}\n\t\teditable={interactive}\n\t\t{max_height}\n\t\ti18n={gradio.i18n}\n\t\t{line_breaks}\n\t\t{column_widths}\n\t\tupload={(...args) => gradio.client.upload(...args)}\n\t\tstream_handler={(...args) => gradio.client.stream(...args)}\n\t\tbind:value_is_output\n\t\t{show_fullscreen_button}\n\t\t{show_copy_button}\n\t/>\n</Block>\n"],"names":["insert","target","input","anchor","ctx","set_data","t_value","dirty","markdowncode_changes","create_if_block_2","span","edit","$$props","value","display_value","styling","header","datatype","latex_delimiters","clear_on_focus","line_breaks","editable","root","dispatch","createEventDispatcher","el","use_focus","node","_value","handle_blur","currentTarget","$$invalidate","handle_keydown","event","$$value","onMount","tick","get_key","i","create_if_block","height","svelte_virtual_table_viewport","append","table","thead","tbody","tfoot","get_computed_px_amount","elem","property","compStyle","items","max_height","actual_height","table_scrollbar_width","start","end","selected","average_height","bottom","contents","head_height","foot_height","height_map","mounted","rows","top","viewport","viewport_height","visible","viewport_box","is_browser","raf","cb","content_height","refresh_height_map","_items","scrollTop","row","_h","row_height","remaining","scrollbar_height","filtered_height_map","v","a","b","scroll_and_render","n","direction","is_in_view","scroll_to_index","current","viewport_top","handle_scroll","e","scroll_top","is_start_overflow","sortedItems","row_top_border","actual_border_collapsed_width","new_start","y","row_heights","remaining_height","index","opts","align_end","_itemHeight","distance","_opts","ResizeObserverSingleton","data","svg","rect","path","create_if_block_1","create_if_block_3","create_if_block_4","create_if_block_5","icon","t1_value","t4_value","button0","button1","t1","t4","button","is_function","if_block0","div","x","on_add_row_above","on_add_row_below","on_add_column_left","on_add_column_right","col_count","row_count","on_delete_row","on_delete_col","can_delete_rows","can_delete_cols","i18n","menu_element","position_menu","viewport_width","menu_rect","new_x","new_y","is_header","can_add_rows","can_add_columns","show_fullscreen_button","show_copy_button","is_fullscreen","on_copy","copied","timer","copy_feedback","handle_copy","onDestroy","copy_table_data","headers","header_row","h","table_data","cell","all_data","textArea","error","p","caption","th","toggle_class","div0","attr","th_aria_sort_value","set_style","div1","td","if_block","create_if_block_6","editablecell_changes","tr","td_title_value","t","dequal","editablecell_props","td_style_value","style_changed","cellmenu_changes","create_if_block_9","if_block1","create_if_block_8","create_if_block_7","if_block4","div2","table_1","tr0","tr1","make_id","guess_delimitaor","text","possibleDelimiters","weedOut","delimiter","cache","checkLength","line","length","data_uri_to_blob","data_uri","byte_str","mime_str","ab","ia","get_max","_d","max","j","label","show_label","values","wrap","column_widths","show_row_numbers","upload","stream_handler","value_is_output","clicked_cell","t_rect","editing","get_data_at","col","last_selected","els","make_headers","_head","fill","_","_id","process_data","_values","data_row_length","id","_headers","old_headers","old_val","previous_headers","previous_data","trigger_change","current_headers","current_data","get_sort_status","name","_sort","get_current_indices","acc","arr","_acc","_data","k","move_cursor","key","current_coords","dir","selected_header","is_data","header_edit","add_row","cell_id","input_el","is_data_x","is_data_y","sort_direction","sort_by","handle_sort","edit_header","_select","end_header_edit","parent","new_row","add_col","insert_index","new_w","handle_click_outside","active_cell_menu","active_header_menu","trigger","blob_to_string","blob","reader","handle_read","head","rest","dsvFormat","dragging","cells","set_cell_widths","widths","scrollbar_width","table_height","sort_data","_display_value","_styling","indices","temp_data","temp_display_value","temp_styling","originalIndex","sortedIndex","is_visible","observer","entries","entry","handle_resize","handle_fullscreen_change","toggle_cell_menu","add_row_at","position","row_index","add_col_at","col_index","active_button","toggle_header_button","toggle_cell_button","toggle_fullscreen","toggle_header_menu","afterUpdate","delete_row","delete_col","delete_row_at","delete_col_at","$$self","click_handler","dblclick_handler","click_handler_3","func","func_1","func_2","func_3","func_4","func_5","func_6","func_7","func_8","func_9","func_10","func_11","d","selected_index","table_changes","elem_id","elem_classes","scale","min_width","gradio","loading_status","interactive","clear_status_handler","args","input_handler","cell_values"],"mappings":"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"}